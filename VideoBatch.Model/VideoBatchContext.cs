using System.Collections.Generic;

namespace VideoBatch.Model
{
    /// <summary>
    /// Holds the execution context for a JobTask, passing data between tasks in a workflow.
    /// </summary>
    public class VideoBatchContext
    {
        /// <summary>
        /// The primary input file path for the task, often the output of the previous task.
        /// Null if the task doesn't require a primary file input (e.g., download task).
        /// </summary>
        public string? InputFilePath { get; set; }

        /// <summary>
        /// The primary output file path generated by the task.
        /// This will often become the InputFilePath for the next task.
        /// Null if the task doesn't produce a primary file output.
        /// </summary>
        public string? OutputFilePath { get; set; }

        /// <summary>
        /// Dictionary holding the runtime values for the task's properties,
        /// keyed by the TaskProperty.Name.
        /// </summary>
        public Dictionary<string, object> Properties { get; set; } = new Dictionary<string, object>();

        /// <summary>
        /// Optional: A place to store messages, logs, or status updates from the task execution.
        /// </summary>
        public List<string> Messages { get; set; } = new List<string>();

        /// <summary>
        /// Optional: Indicates whether the task execution encountered an error.
        /// </summary>
        public bool HasError { get; set; } = false;

        // Could add more properties later, like cancellation tokens, progress reporting delegates, etc.
    }
} 